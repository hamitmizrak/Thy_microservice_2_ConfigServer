
# Eureka Service
# http://localhost:8761
#http://localhost:8761/eureka/apps
#http://localhost:8761/eureka/apps/address-service
#http://localhost:8761/actuator/health
#
## Config Service
## http://localhost:8888
#http://localhost:8888/actuator/health
#http://localhost:8888/health/check
#http://localhost:8888/config-client/default/master
#
## Api Gateway Service
## http://localhost:9999
#http://localhost:9999/actuator/health
#
## Address Service
## http://localhost:1111
#http://localhost:1111/actuator/health
#http://localhost:1111/api/address
#http://localhost:8888/address-service/default
#
## Customer Service
## http://localhost:2222
#http://localhost:2222/actuator/health
#
## GitHub Addresleri
#https://github.com/hamitmizrak/THY_1_EurekaServer
#https://github.com/hamitmizrak/Thy_microservice_2_ConfigServer
#https://github.com/hamitmizrak/config-repo
#https://github.com/hamitmizrak/THY_Microservice_4_ApiGateway
########################################################################


# Config Server uygulamasının çalışacağı portu tanımlar.
server:
  port: 8888  # Config Server için kullanılan özel port numarası

# Spring Cloud
spring:
  cloud:
    config:
      server:
        git:
          # Yapılandırma dosyalarını alacağı Git deposunun URL'sini belirler.
          uri: https://github.com/hamitmizrak/config-repo  # Git deposunun adresi

          # Config Server'in hangi Git dalını (branch) varsayılan olarak kullanacağını belirler.
          default-label: master  # Varsayılan Git dalı "master" olarak ayarlanmış

          #refreshRate: 10m  # Yapılandırma yenileme süresi (örn: 10 dakika)

          #Eğer Git reposuna erişim sağlamak için kimlik doğrulama gerekiyors
          #username: hamitmizrak@gmail.com  # Git kullanıcı adı
          #password: your-password  # Git şifresi

  # Uygulamanın adını tanımlar. Bu isim, Config Server'ı temsil eder.
  application:
    name: config-server  # Uygulama adı "config-server" olarak tanımlanmış

# Actuator
management:
  health:
    config:
      enabled: true  # Config Server'ın sağlığını kontrol etmek için

# Logging
logging:
  level:
    org.springframework.cloud.config.server: DEBUG  # Config Server log seviyesini DEBUG yapar
